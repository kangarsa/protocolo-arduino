<?PHP
// =============================================================================
// Please, use it under PHP 5 or greater.
// =============================================================================
include("database/db.class.php");
include_once("inc/php_serial.class.php");
include_once("basic/log.class.php");
include_once("basic/action.class.php");
include_once("basic/pintype.class.php");
// =============================================================================
// CLASS Context
// =============================================================================
class Context
{
	
	// ===========================================================================
	// Properties
	// ===========================================================================

	public static $gianas = array();

  // -------------------------------------------------------------------------
  // Change this to match your services root URI
  // -------------------------------------------------------------------------
	const servicesRootURI = "http://localhost:8888/giana/services/";				// |
	// -------------------------------------------------------------------------		
	
  // -------------------------------------------------------------------------
  // Change this random string, here and in your security.config.php
  // -------------------------------------------------------------------------
	const SALT = "0G9UFVc8VQTCs5qosAAg";																		// |
	// -------------------------------------------------------------------------		

  // -------------------------------------------------------------------------
  // Change this match your Arduino baud rate
  // -------------------------------------------------------------------------
	const BaudRate = 9600;																									// |
	// -------------------------------------------------------------------------		
	
	// ===========================================================================
	// Methods
	// ===========================================================================

	public static function initialize()
	{

		// -------------------------------------------------------------------------
    // Add as many Arturitos as Arduinos you have !
    // -------------------------------------------------------------------------
		Context::$gianas[] = new Arturito("/dev/ttyACM0");													// |
		// -------------------------------------------------------------------------		
		
	}
	
	public static function getServicesRootURI()
	{
	
		return Context::servicesRootURI .
			(substr (Context::servicesRootURI, 
							strlen(Context::servicesRootURI) - 1, 1) == "/" ? "" : "/");
							
	}
	
	public static function getArturitoAt($port)
	{
		foreach(Context::$arts as $art)
			if ($art->port == $port)
				return $art;
		Log::this("There is no Arturito at port " . $port . ".", false);
		return null;
	}
	
}
// =============================================================================
// MAIN
// =============================================================================
{

	// =============================================================================
	Context::initialize();
	// =============================================================================

	// =============================================================================
	Log::this("Program started.", false);
	// =============================================================================

	// =============================================================================
	// Schedule
	// =============================================================================
	//$schedule = Schedule::get();
	$
	if ($schedule != null)
	{
			$art = Context::getArturitoAt($schedule->port);
			if ($art != null)
					$art->performSchedule($schedule);
			else
					$schedule->done(true);
	}	
	// =============================================================================
	// Request
	// =============================================================================
	$request = Request::get();
	if ($request != null)
	{
		$art = Context::getArturitoAt($request->port);
		if ($art != null)
				$art->performRequest($request);
		else
		{
			$response = new Response(
					$request->id,
					Response::Error
				);
			$response->post();
		}
	}
	// =============================================================================

	// =============================================================================
	sleep(1);	
	// =============================================================================
	
	// =============================================================================
	Log::this("Program ended.", false);
	// =============================================================================

}
// ========================================================================================================
// Arturito
// ========================================================================================================
class Arturito
{

}

